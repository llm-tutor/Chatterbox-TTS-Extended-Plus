openapi: 3.0.3
info:
  title: Chatterbox TTS Extended Plus API
  description: Text-to-Speech and Voice Conversion API with enhanced features
  version: 1.7.0
  contact:
    name: API Support
  license:
    name: MIT
    
servers:
  - url: http://localhost:7860
    description: Local development server

tags:
  - name: System
    description: System operations (health, config, voices)
  - name: TTS
    description: Text-to-Speech generation
  - name: Voice Conversion
    description: Voice conversion operations
  - name: Voice Management
    description: Voice upload and management
  - name: Files
    description: File operations and downloads

paths:
  /api/v1/health:
    get:
      summary: Health Check
      description: Check API health and system status
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/v1/config:
    get:
      summary: Get Configuration
      description: Get current system configuration
      operationId: getConfig
      tags:
        - System
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'

  /api/v1/voices:
    get:
      summary: List Available Voices
      description: Get list of available reference voice files
      operationId: listVoices
      tags:
        - System
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: Items per page
          schema:
            type: integer
            default: 50
        - name: search
          in: query
          description: Search term
          schema:
            type: string
      responses:
        '200':
          description: Voices retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicesResponse'
    delete:
      summary: Bulk Delete Voices
      description: Bulk delete voices based on criteria
      operationId: bulkDeleteVoices
      tags:
        - Voice Management
      parameters:
        - name: confirm
          in: query
          required: true
          schema:
            type: boolean
          description: Confirmation required for bulk deletion
        - name: folder
          in: query
          schema:
            type: string
          description: Delete voices in specific folder
        - name: tag
          in: query
          schema:
            type: string
          description: Delete voices with specific tag
        - name: search
          in: query
          schema:
            type: string
          description: Delete voices matching search term
        - name: filenames
          in: query
          schema:
            type: string
          description: Comma-separated list of filenames to delete
      responses:
        '200':
          description: Voices deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceDeletionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/v1/voices/folders:
    get:
      summary: List Voice Folders
      description: Get list of voice folder organization
      operationId: listVoiceFolders
      tags:
        - Voice Management
      responses:
        '200':
          description: Voice folders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceFoldersResponse'

  /api/v1/voice:
    post:
      summary: Upload Voice File
      description: Upload a new voice file with metadata
      operationId: uploadVoice
      tags:
        - Voice Management
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                voice_file:
                  type: string
                  format: binary
                  description: Voice audio file
                name:
                  type: string
                  description: Voice name
                description:
                  type: string
                  description: Voice description
              required:
                - voice_file
      responses:
        '200':
          description: Voice uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUploadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/v1/voice/{filename}:
    delete:
      summary: Delete Voice File
      description: Delete a specific voice file
      operationId: deleteVoice
      tags:
        - Voice Management
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: Voice filename to delete
        - name: confirm
          in: query
          required: true
          schema:
            type: boolean
          description: Confirmation required to delete voice
      responses:
        '200':
          description: Voice deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceDeletionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/voice/{filename}/metadata:
    put:
      summary: Update Voice Metadata
      description: Update voice metadata without changing the audio file
      operationId: updateVoiceMetadata
      tags:
        - Voice Management
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: Voice filename
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceMetadataUpdate'
      responses:
        '200':
          description: Metadata updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceUploadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/tts:
    post:
      summary: Text-to-Speech Generation
      description: Generate speech from text with optional voice cloning
      operationId: generateTTS
      tags:
        - TTS
      parameters:
        - name: response_mode
          in: query
          description: Response mode ('stream' or 'url')
          schema:
            type: string
            enum: [stream, url]
            default: stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TTSRequest'
      responses:
        '200':
          description: TTS generation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TTSResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/vc:
    post:
      summary: Voice Conversion
      description: Convert voice characteristics to match a target voice
      operationId: convertVoice
      tags:
        - Voice Conversion
      parameters:
        - name: response_mode
          in: query
          description: Response mode ('stream' or 'url')
          schema:
            type: string
            enum: [stream, url]
            default: stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VCRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                input_audio:
                  type: string
                  format: binary
                  description: Input audio file
                target_voice_source:
                  type: string
                  description: Target voice filename
                export_formats:
                  type: string
                  default: "wav"
                  description: Export formats
              required:
                - input_audio
                - target_voice_source
      responses:
        '200':
          description: Voice conversion successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCResponse'
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/outputs:
    get:
      summary: List Generated Files
      description: Get list of generated audio files
      operationId: listOutputs
      tags:
        - Files
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Files retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedFilesResponse'

  /outputs/{filename}:
    get:
      summary: Download Generated File
      description: Download a generated audio file
      operationId: downloadFile
      tags:
        - Files
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/concat:
    post:
      summary: Concatenate Audio Files
      description: Combine multiple generated audio files with natural pauses and optional crossfading
      operationId: concatenateAudio
      tags:
        - Files
      parameters:
        - name: response_mode
          in: query
          description: Response mode - stream for direct download or url for metadata
          schema:
            type: string
            enum: [stream, url]
            default: stream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConcatRequest'
            examples:
              natural_pauses:
                summary: Natural pauses (default)
                value:
                  files: ["tts_output_1.wav", "tts_output_2.wav"]
                  pause_duration_ms: 600
                  pause_variation_ms: 200
              custom_timing:
                summary: Custom pause timing
                value:
                  files: ["segment1.wav", "segment2.wav", "segment3.wav"]
                  pause_duration_ms: 1000
                  pause_variation_ms: 300
                  export_formats: ["wav", "mp3"]
              crossfade_with_pauses:
                summary: Crossfade with pauses
                value:
                  files: ["audio1.wav", "audio2.wav"]
                  crossfade_ms: 500
                  pause_duration_ms: 800
                  normalize_levels: true
              no_pauses:
                summary: No pauses (legacy)
                value:
                  files: ["clip1.wav", "clip2.wav"]
                  pause_duration_ms: 0
                  response_mode: url
      responses:
        '200':
          description: Audio concatenation successful
          content:
            audio/wav:
              schema:
                type: string
                format: binary
              example: "[Binary audio data for WAV]"
            audio/mpeg:
              schema:
                type: string
                format: binary
              example: "[Binary audio data for MP3]"
            audio/flac:
              schema:
                type: string
                format: binary
              example: "[Binary audio data for FLAC]"
            application/json:
              schema:
                $ref: '#/components/schemas/ConcatResponse'
              example:
                success: true
                message: "Audio concatenation completed successfully"
                output_files: ["concat_2025-06-22_143100_123_2files_pause600±200_leveled.wav"]
                total_duration_seconds: 8.45
                file_count: 2
                processing_time_seconds: 0.23
                metadata:
                  pause_duration_ms: 600
                  pause_variation_ms: 200
                  total_pause_duration_ms: 543
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Audio file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                detail: "File not found: non_existent_file.wav"
        '422':
          $ref: '#/components/responses/ValidationError'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        models_loaded:
          type: object
          properties:
            tts:
              type: boolean
            vc:
              type: boolean
        version:
          type: string
        uptime_seconds:
          type: number

    ConfigResponse:
      type: object
      properties:
        tts_model:
          type: string
        vc_model:
          type: string
        paths:
          type: object

    TTSRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Text to synthesize
        reference_audio_filename:
          type: string
          description: Reference voice file
        exaggeration:
          type: number
          default: 0.5
          minimum: 0
          maximum: 2.0
        temperature:
          type: number
          default: 0.75
          minimum: 0.1
          maximum: 2.0
        seed:
          type: integer
          default: 0
          minimum: 0
          description: Random seed (0 for random)
        speed_factor:
          type: number
          default: 1.0
          minimum: 0.5
          maximum: 2.0
        trim:
          type: boolean
          default: false
          description: Apply silence trimming to generated audio
        trim_threshold_ms:
          type: integer
          default: 200
          minimum: 50
          maximum: 1000
          description: Silence threshold for trimming in milliseconds
        export_formats:
          type: array
          items:
            type: string
            enum: [wav, mp3, flac]
          default: [wav, mp3]
        disable_watermark:
          type: boolean
          default: true
          description: Disable watermark

    VCRequest:
      type: object
      required:
        - input_audio_source
        - target_voice_source
      properties:
        input_audio_source:
          type: string
          description: Input audio file or URL
        target_voice_source:
          type: string
          description: Target voice file
        chunk_sec:
          type: integer
          default: 60
          minimum: 1
          maximum: 300
        overlap_sec:
          type: number
          default: 0.1
          minimum: 0.0
          maximum: 5.0
        disable_watermark:
          type: boolean
          default: true
          description: Disable watermark
        export_formats:
          type: array
          items:
            type: string
            enum: [wav, mp3, flac]
          default: [wav, mp3]

    TTSResponse:
      type: object
      properties:
        status:
          type: string
        files:
          type: object
        generation_info:
          type: object

    VCResponse:
      type: object
      properties:
        status:
          type: string
        files:
          type: object
        processing_info:
          type: object

    ConcatRequest:
      type: object
      required:
        - files
      properties:
        files:
          type: array
          items:
            type: string
          minItems: 2
          description: List of filenames from outputs directory to concatenate
          example: ["tts_output_1.wav", "tts_output_2.wav"]
        export_formats:
          type: array
          items:
            type: string
            enum: [wav, mp3, flac]
          default: ["wav"]
          description: Output formats
        normalize_levels:
          type: boolean
          default: true
          description: Normalize audio levels to prevent clipping
        crossfade_ms:
          type: integer
          minimum: 0
          maximum: 5000
          default: 0
          description: Crossfade duration in milliseconds
        pause_duration_ms:
          type: integer
          minimum: 0
          maximum: 3000
          default: 0
          description: Base pause duration between clips in milliseconds (0 = no pause)
        pause_variation_ms:
          type: integer
          minimum: 0
          maximum: 500
          default: 200
          description: Random variation in pause duration (±) in milliseconds
        output_filename:
          type: string
          description: Custom output filename (without extension)
        response_mode:
          type: string
          enum: [stream, url]
          default: stream
          description: Response mode - stream for direct download or url for metadata

    ConcatResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
        message:
          type: string
          example: "Audio concatenation completed successfully"
        output_files:
          type: array
          items:
            type: string
          description: Generated concatenated files
          example: ["concat_2025-06-22_143100_123_2files_pause600±200_leveled.wav"]
        total_duration_seconds:
          type: number
          description: Total duration of concatenated audio
          example: 8.45
        file_count:
          type: integer
          description: Number of input files concatenated
          example: 2
        processing_time_seconds:
          type: number
          description: Time taken to process concatenation
          example: 0.23
        metadata:
          type: object
          description: Detailed concatenation metadata
          properties:
            total_duration_seconds:
              type: number
            file_count:
              type: integer
            processing_time_seconds:
              type: number
            processed_files:
              type: array
              items:
                type: object
                properties:
                  filename:
                    type: string
                  duration_seconds:
                    type: number
                  size_bytes:
                    type: integer
            output_size_bytes:
              type: integer
            crossfade_ms:
              type: integer
            normalized:
              type: boolean
            pause_duration_ms:
              type: integer
            pause_variation_ms:
              type: integer
            total_pause_duration_ms:
              type: integer

    VoicesResponse:
      type: object
      properties:
        voices:
          type: array
          items:
            $ref: '#/components/schemas/VoiceInfo'
        pagination:
          type: object

    VoiceInfo:
      type: object
      properties:
        filename:
          type: string
        name:
          type: string
        description:
          type: string
        duration_seconds:
          type: number

    VoiceUploadResponse:
      type: object
      properties:
        status:
          type: string
        filename:
          type: string
        message:
          type: string

    VoiceDeletionResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        deleted_files:
          type: array
          items:
            type: string

    VoiceMetadataUpdate:
      type: object
      properties:
        name:
          type: string
          description: Voice name
        description:
          type: string
          description: Voice description
        tags:
          type: array
          items:
            type: string
          description: Voice tags
        default_parameters:
          type: object
          description: Default TTS parameters for this voice

    VoiceFoldersResponse:
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/VoiceFolderInfo'

    VoiceFolderInfo:
      type: object
      properties:
        path:
          type: string
        voice_count:
          type: integer
        subfolders:
          type: array
          items:
            type: string

    GeneratedFilesResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/GeneratedFileMetadata'
        pagination:
          type: object

    GeneratedFileMetadata:
      type: object
      properties:
        filename:
          type: string
        created_at:
          type: string
        size_bytes:
          type: integer
        format:
          type: string

    ErrorResponse:
      type: object
      required:
        - success
        - error
        - error_code
      properties:
        success:
          type: boolean
          default: false
          description: Always false for error responses
        error:
          type: string
          description: Brief error message
        detail:
          type: string
          description: Detailed error information
        error_code:
          type: string
          description: Machine-readable error code
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

  responses:
    BadRequest:
      description: Bad request - validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ValidationError:
      description: Validation error - invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error: "Validation failed"
            detail: "Invalid parameter values provided"
            error_code: "VALIDATION_ERROR"
            timestamp: "2025-06-24T20:30:00Z"
